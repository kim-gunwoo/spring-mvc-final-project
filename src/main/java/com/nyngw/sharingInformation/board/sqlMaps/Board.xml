<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyngw.sharingInformation.board.dao.BoardDao">
	
	<select id="selectList" resultType="com.nyngw.dto.BoardVO">
		select * from board
	</select>
	
	<select id="selectBoardCount" resultType="java.lang.Integer">
		select count(*) from board where board_code_number = 'code7'
	</select>
	
	<select id="boardSelectCount" parameterType="com.nyngw.dto.Board_SelectVO" resultType="java.lang.Integer">
		select count(*) from board where board_code_number = 'code7'
		<choose>
		    <when test='index == "board_mem_number"'>
		    	AND board_mem_number = (select mem_number from member where mem_name = #{val})
		    </when>
		    <when test='index == "board_title"'>
		    	AND board_title like '%'||#{val}||'%'
		    </when>
	  	</choose>
	</select>
	
<!-- 		select * from board where board_title like  and board_code_number = 'code7' order by 1 desc -->
	<select id="selectBoardList" parameterType="com.nyngw.dto.Board_SelectVO" resultType="com.nyngw.dto.BoardVO">
<!-- 		우선 전체 출력이 되도록한다. -->
		select * from board where 1 = 1
		
		<choose>
<!-- 			index는 작성자로 검색할 것인지, 제목으로 검색할 것인지 담겨있는 String 이며
				담겨있는값이 뭐냐에 따라 검색이 된다.
 -->
		    <when test='index == "board_mem_number"'>
		    	AND board_mem_number = (select mem_number from member where mem_name = #{val})
		    </when>
		    <when test='index == "board_title"'>
		    	AND board_title like '%'||#{val}||'%'
		    </when>
	  	</choose>
<!-- 	  	그리고 게시판 형식을 갖고 있는 애만 검색한다. -->
		and board_code_number = 'code7' order by 6 desc
	</select>
	
	<select id="selectBoard" parameterType="java.lang.String" resultType="com.nyngw.dto.BoardVO">
		select * from board where board_number like #{board_number}
	</select>

	<select id="selectMax" resultType="java.lang.String">
		select max(board_number) from board
	</select>
	
	<update id="boardUpdate" parameterType="com.nyngw.dto.BoardVO">
		update board 
		set board_title = #{board_title}, 
			board_content = #{board_content}
<!-- 			board_count=#{board_count}, -->
		where board_number = #{board_number}
	</update>

	<update id="updateBoardCountPlus" parameterType="com.nyngw.dto.BoardVO">
		update board
		set board_count =  to_number(board_count)+1
		where board_number = #{board_number}
	</update>

	<update id="boardInsert" parameterType="com.nyngw.dto.BoardVO">
		insert into board(board_number, board_code_number, board_title, board_content, board_file_name,
							 board_count, board_date, board_mem_number)
		values('board'||board_seq.nextVal, #{board_code_number}, #{board_title}, #{board_content}, #{board_file_name},
		       #{board_count}, #{board_date}, #{board_mem_number})
	</update>

	<update id="boardDelete" parameterType="java.lang.String">
		delete from board where board_number = #{board_number}
	</update>
	
	<!-- 댓글 -->
	<update id="answerWrite" parameterType="com.nyngw.dto.Board_CommentVO">
		insert into board_comment(comment_number, comment_board_number, comment_content, comment_date, comment_mem_number)
		values('comment'||comment_seq.nextVal, #{comment_board_number}, #{comment_content}, #{comment_date}, #{comment_mem_number})
	</update>
	
	<select id="answerSelectList" parameterType="java.lang.String" resultType="com.nyngw.dto.Board_CommentVO">
		select * from board_comment where comment_board_number = #{board_number} order by to_number(substr(comment_number,8)) desc
	</select>

	<update id="answerDelete" parameterType="java.lang.String">
		delete from board_comment where comment_number = #{comment_number}
	</update>

	<update id="answerUpdate" parameterType="com.nyngw.dto.Board_CommentVO">
		update board_comment 
		set comment_board_number=#{comment_board_number},
			comment_content=#{comment_content}, 
			comment_date=#{comment_date},
			comment_mem_number=#{comment_mem_number}
		where comment_number=#{comment_number}
	</update>
</mapper>